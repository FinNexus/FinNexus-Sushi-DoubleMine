{
	"compiler": {
		"version": "0.5.16+commit.9c3226ce"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation_",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"payable": true,
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "delegateToImplementation",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "delegateToViewImplementation",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "distributionBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "duration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "exit",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "fnx",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getMineInfo",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "getReward",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getVersion",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "getbackLeftMiningToken",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "lastUpdateTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "lp",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "periodFinish",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rewardPerTokenStored",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rewardPerduration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "rewardRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "rewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "halt",
						"type": "bool"
					}
				],
				"name": "setHalt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "implementation_",
						"type": "address"
					}
				],
				"name": "setImplementation",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "setMineRate",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "setPeriodFinish",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "_liquidpool",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_fnxaddress",
						"type": "address"
					}
				],
				"name": "setPoolMineAddress",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "stake",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "totalRewards",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "totalStaked",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "totalStakedFor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "unstake",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "userRewardPerTokenPaid",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "A smart-contract which distribute some mine coins by FPTCoin balance.  ",
			"methods": {
				"delegateToImplementation(bytes)": {
					"details": "It returns to the external caller whatever the implementation returns or forwards reverts",
					"params": {
						"data": "The raw data to delegatecall"
					},
					"return": "The returned bytes from the delegatecall"
				},
				"delegateToViewImplementation(bytes)": {
					"details": "It returns to the external caller whatever the implementation returns or forwards reverts There are an additional 2 prefix uints from the wrapper returndata, which we ignore since we make an extra hop.",
					"params": {
						"data": "The raw data to delegatecall"
					},
					"return": "The returned bytes from the delegatecall"
				},
				"distributionBalance()": {
					"return": "Total number of distribution tokens balance."
				},
				"exit()": {
					"details": "user  unstake and get back reward amount stake in amout"
				},
				"getMineInfo()": {
					"details": "get mine info"
				},
				"getReward()": {
					"details": "user redeem mine rewards."
				},
				"getbackLeftMiningToken(address)": {
					"details": "getting back the left mine token reciever the reciever for getting back mine token"
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"setMineRate(uint256,uint256)": {
					"details": "changer liquid pool distributed time interval , only foundation owner can modify database. reward the distributed token amount in the time interval mineInterval the distributed time interval."
				},
				"setPeriodFinish(uint256,uint256)": {
					"details": "set period to finshi mining _periodfinish the finish time"
				},
				"stake(uint256,bytes)": {
					"details": "user stake in lp token amount stake in amout"
				},
				"totalRewards(address)": {
					"details": "retrieve user's stake balance. account user's account"
				},
				"totalStaked()": {
					"details": "all stake token.",
					"return": "The number of staking tokens"
				},
				"totalStakedFor(address)": {
					"params": {
						"addr": "The user to look up staking information for."
					},
					"return": "The number of staking tokens deposited for addr."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unstake(uint256,bytes)": {
					"details": "user  unstake to cancel mine amount stake in amout"
				}
			},
			"title": "FPTCoin mine pool, which manager contract is FPTCoin."
		},
		"userdoc": {
			"methods": {
				"delegateToImplementation(bytes)": {
					"notice": "Delegates execution to the implementation contract"
				},
				"delegateToViewImplementation(bytes)": {
					"notice": "Delegates execution to an implementation contract"
				},
				"setHalt(bool)": {
					"notice": "function Emergency situation that requires contribution period to stop or not."
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/MinePoolProxy.sol": "MinePoolProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/Halt.sol": {
			"keccak256": "0xec7f07eddf2d48f8ca3a0fc08fee6443067179607ce4011ba054883b53b7b179",
			"urls": [
				"bzz-raw://90b38398b4a181fd5e1b70799aec2d24df314ba24ec82ed768fee9693c762592",
				"dweb:/ipfs/QmNttDJiP7ZxUYWFTHiwgbcQ3MWftqS8d9uq8iGX3ZNpRv"
			]
		},
		"localhost/MinePoolData.sol": {
			"keccak256": "0xc9c81a566cd5348fd531e6cb7ed6670cd7e381bdea79d9eeae6a39d6da53b265",
			"urls": [
				"bzz-raw://48a2fc26b4ac165b6788a1a62d657ab8abf9c97c5d3f3d653de10e8ccffccea5",
				"dweb:/ipfs/QmSiyoLTV9ZfWfEUETceLQDZ97Wfe13qYQPqjWSigmAtFB"
			]
		},
		"localhost/MinePoolProxy.sol": {
			"keccak256": "0xe20e18b5b2fb9ca583d313ee98d1eb7143b199b67f702dfc1825cee3617362d8",
			"urls": [
				"bzz-raw://124df47e3fd7da6b2dd12824376067d9c3c77f00da3d28e1e8d23224402bffea",
				"dweb:/ipfs/Qme1Xk8iNcfRHFCx7uAWpubqD2jQ9mPwHtcjrkiXVGCo1V"
			]
		},
		"localhost/Ownable.sol": {
			"keccak256": "0x283d39388b6a114767746e38a205a4bfaaeb401c4863a7eb17fa107684d7845b",
			"urls": [
				"bzz-raw://716829652ea09ecaf4fca47af0d4edb145db6f25548c0710ccb83f39e4b9bea8",
				"dweb:/ipfs/QmWDKty8932txnmo4JLiCVfvDHyLqHik2W1NYeXBFQMzYs"
			]
		},
		"localhost/ReentrancyGuard.sol": {
			"keccak256": "0x20f4f3c2a5c27de31241140a1008f13ba35a96fbb9c5b14c669a2abb1029e345",
			"urls": [
				"bzz-raw://3eb6b4abcc952bd289aa1c7f86407d7f58b7b7a04ce056b4fc2115595ec2907c",
				"dweb:/ipfs/QmbEzC6iS4x3fY645pWZmgumnLg2dLFyVd5tLjyzdSyJRP"
			]
		},
		"localhost/baseProxy.sol": {
			"keccak256": "0x97e0297ebe959c35dd55fc5665fe67f22e399b78593a170967c991d26a71adec",
			"urls": [
				"bzz-raw://d047f6c32ce5521401c4efe3fb13bfb7f09a71395a9da2ee0cefba270ef0b6bc",
				"dweb:/ipfs/QmQ4X3Zwt6QhHgSeCTERpGDYsct7HMBYLHDQRG4wDaT8Qn"
			]
		}
	},
	"version": 1
}